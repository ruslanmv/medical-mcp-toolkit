[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "medical-mcp-toolkit"
version = "0.2.0"
description = "Production-ready Medical MCP toolkit with HTTP API + SSE/STDIO, optional Postgres backend."
readme = "README.md"
requires-python = ">=3.11,<3.12"
license = { text = "MIT" }
authors = [{ name = "Medical MCP Toolkit Maintainers" }]
keywords = ["mcp", "fastapi", "healthcare", "medical", "agents", "orchestrate", "watsonx"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Environment :: Web Environment",
  "Framework :: FastAPI",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
dependencies = [
  "pydantic>=2.6",
  "fastapi>=0.115",
  "uvicorn[standard]>=0.30",
  "mcp>=1.17,<2.0",
  "typing-extensions>=4.8",
  "orjson>=3.9",
  "python-dotenv>=1.0",
  "psycopg[binary]>=3.1",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.6.9",
  "black>=24.8.0",
  "pytest>=8.0",
  "httpx>=0.27",
  "anyio>=4.0",
]

[project.urls]
Homepage = "https://github.com/ruslanmv/medical-mcp-toolkit"
Repository = "https://github.com/ruslanmv/medical-mcp-toolkit"
Issues = "https://github.com/ruslanmv/medical-mcp-toolkit/issues"

[tool.setuptools.packages.find]
where = ["src"]

# Include non-Python assets when building sdists/wheels (safest alongside MANIFEST.in if you add one).
[tool.setuptools]
include-package-data = true

# If you want the schema shipped with the wheel as a top-level data file.
# NOTE: mcp_server currently reads schemas relative to the repo root, so this is best-effort.
[tool.setuptools.data-files]
"schemas" = ["schemas/components.schema.json"]

# ---- Ruff (formatter + linter) ----
[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = ["build", "dist", ".venv", ".pytest_cache", ".ruff_cache"]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]
ignore = []

[tool.ruff.format]
quote-style = "double"

# ---- Black ----
[tool.black]
line-length = 100
target-version = ["py311"]

# ---- Pytest ----
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q"
testpaths = ["tests"]

# ---- Uvicorn convenience (optional) ----
[tool.uvicorn]
factory = false
reload = true
host = "0.0.0.0"
port = 9090

# ---- uv configuration (optional) ----
# uv will create .venv and sync dependencies from this file.
[tool.uv]
managed = true
python-preference = "managed"
